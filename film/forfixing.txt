themeswitch
                            h1(:style="{color: plotColor}") Change Words
                            .switch(@click="switchWords" v-class="{active: isActive}" :style="{justifyContent: activeFlex}")
                                .switch-ball(:style="{backgroundColor: activeColor}")
=======
                            h1(:style="{color: plotColor}") Change Words
                            changeWords(v-on:active="changeWords($event)" :class="{used: isUsed}")
develop



themeswitch
        switchWords: function() {
            this.isActive = !this.isActive
            if(this.$parent.$data.theme == false){
                if (this.isActive == true) {
                    this.activeFlex = "flex-end"
                    this.activeColor = "dodgerblue"
                }else{
                    this.activeFlex = null
                    this.activeColor = null
                }
            }else{
                if (this.isActive == true) {
                    this.activeFlex = "flex-end"
                    this.activeColor = "#8d2663"
                }else{
                    this.activeFlex = null
                    this.activeColor = null
                }
=======

        changeWords: function(isActive) {

            if (this.isUsed && isActive) {
                this.title = this.originalTitle
                this.plot = this.originalPlot

            }else if (this.isUsed && isActive == false){
                this.title = this.newTitle
                this.plot = this.newPlot

            } else {

                ////TITLE
                let title = this.title.split(/[.,':\/ -]/)
                let titleWords = []
                
                for (let index = 0; index < title.length; index++) {
                    if (title[index] != "") {
                        titleWords.push(getSynonym(title[index]))
                    }
                }

                Promise.all(titleWords)
                .then((response) => {
                    
                    let newTitle = switchWords(response, this.title)

                    this.title = newTitle
                    this.newTitle = newTitle
                })
                .catch(console.log)

                ////PLOT
                let plot = this.plot.split(/[.,':\/ -]/)
                let plotWords = []

                for (let index = 0; index < plot.length; index++) {
                    if (plot[index] != "") {
                        plotWords.push(getSynonym(plot[index]))
                    }
                }

                Promise.all(plotWords)
                .then((response) => {
                    
                    let newPlot = switchWords(response, this.plot)

                    this.plot = newPlot
                    this.newPlot = newPlot
                })
                .catch(console.log)


                this.isUsed = true

develop


 themeswitch
        })
        // console.log("what")
        // console.log(this.$parent)
        if (this.$parent.$data.theme == false){}else{
        this.movieColor = "#8d2663"
        this.plotColor = "white"
        //this.$children[0].$data.backgroundColor = "black"
        }
=======
        this.title = this.$route.params.movie
        this.originalTitle = this.$route.params.movie

        getMovie(this.title).then((response) => {
            this.plot = response
            this.originalPlot = response
            this.loading = false
        }).catch(console.log)
  
develop

